name: build-wheels

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master, unstuck-vmprof ]
  pull_request:
    branches: [ master, unstuck-vmprof ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build_binary_wheels:
    name: Build binary wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, windows-2022, macos-13, macos-latest]

    steps:
      # Note: the action happens inside a docker image
      - uses: actions/checkout@v4

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.21.1
        env:
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          CIBW_MANYLINUX_I686_IMAGE: manylinux2014
          CIBW_MANYLINUX_AARCH64_IMAGE: manylinux2014
          CIBW_ARCHS_LINUX: auto aarch64
          CIBW_SKIP: "pp* *-win32 *-manylinux_i686 *musllinux*"
          CIBW_BEFORE_BUILD_LINUX: yum install -y libunwind-devel elfutils-libelf-devel libdwarf-devel
          CIBW_BEFORE_TEST: pip install -r test_requirements.txt
          CIBW_TEST_COMMAND: cd {package} && pytest vmprof jitlog -vv
          CIBW_TEST_COMMAND_WINDOWS: cd /d {package} && pytest vmprof jitlog -vv

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}
          path: ./wheelhouse/*.whl


  build_pypy_wheels:
    name: Build pypy wheels
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false

    steps:
      # Note: not inside a docker
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 'pypy-3.10'

      - name: Install system libraries
        run: sudo apt install -y libunwind-dev libelf-dev libdwarf-dev rename

      - name: Build wheel
        run: |
          pypy -m pip install wheel
          pypy -m pip wheel .

      - name: Install wheel
        run: pypy -m pip install vmprof*.whl

      - name: Test wheel
        run: |
          FAILED=false
          pypy -m pip install -r test_requirements.txt
          pypy -m pytest vmprof -v || FAILED=true
          pypy -m pytest jitlog -v || FAILED=true
          if [ "FAILED" == true ]; then exit 1; fi
          # The wheel name is something like
          # vmprof-0.4.15-py3-none-any.whl
          # when it should be
          # vmprof-0.4.15-pp3-none-any.whl
          rename 's/py3/pp3/' vmprof-*.whl

      - uses: actions/upload-artifact@v3
        with:
          path: vmprof*.whl

